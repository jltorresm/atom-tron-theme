// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/stylesheets/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";
@import "colors";

atom-text-editor {
  background-color: @bg-color;
  color: @main-rule;
}

.leading-whitespace {
  border-left: dotted 1px;
  box-shadow: none;
  color: @indent-guide;
  opacity: 0.3;
}

.invisible-character {
  color: @base01;
}

.gutter {
  background-color: @gutter-bg;
}

.gutter .line-number {
  color: @line-number-color;
  opacity: 1;
}

.gutter .line-number.folded,
.gutter .line-number:after,
.fold-marker:after {
  color: @folded-line;
}

.cursor {
  border-color: @cursor;
}

.selection .region {
  background-color: @selection;
}

.line-number.cursor-line-no-selection {
  background-color: lighten(@gutter-bg, 5%);
}

.tab-bar .tab.active {
  &::before {
    background: @line-number-color;
  }

  &[data-type="TextEditor"]::after {
    background: @bg-color;
    border-color: @selection;
  }
}

.bracket-matcher .region {
  background-color: @bracket-matcher;
  opacity: 0.3;
}

.comment {
  color: @comment;
  font-style: italic;
}

.entity{
  color: @entities;
}

.keyword {
  color: @green;
}

.storage.type {
  color: @green;
}

.constant {
  color: @constants;

  &.numeric,
  &.boolean {
    color: @number;
  }
}

.variable {
  color: @variable;
}

.delimiter, .brace {
  color: @brace;
}

.delimiter.period {
  color: @green;
}

.invalid.deprecated {
  text-decoration: underline;
  color: @red;
}

.invalid.illegal {
  color: @red;
}

.string {
  color: @string;

  .constant.character.escape {
    color: @red;
  }

  &.regexp {
    color: @cyan;

    .source.ruby.embedded,
    .string.regexp.arbitrary-repitition {
      color: @red;
    }
  }
}

.wrap-guide {
  background-color: transparent;
  border-left: dotted 1px @indent-guide;
  opacity: 0.5;
}

//JSON
.source.json {
  .leading-whitespace+.string, .hard-tab+.string {
      color: @comment;
      .punctuation {
        color: @comment;
      }
  }
  .key-value, .pair{ color: @green; }
  .expected-dictionary-separator{ color: spin(darken(@string,20%),10) }
  .constant { color: @entities; }
}

//PHP
.source.php {
  .keyword {
    color: @php-keyword;
    &.operator {
      color: @php-operator;
    }
  }
  .entity:not(.inherited-class) {
    color: @php-entity
  }
  .type {
    color: @php-class-functions;
  }
  .punctuation:not(.variable), .modifier {
    color: @php-punctuation-modifier;
  }
  .punctuation.string{
    color: @string;
  }
  .comment, .comment.punctuation {
    color: @php-comment;
  }
  .phpdoc.keyword {
    color: saturate(lighten(@php-comment, 10%), 10%);
    font-style: normal;
  }
  .name.function{
    color: @php-function;
  }
  .function-call {
    color: @php-function-call;
  }
  .constant {
    color: @php-constant;
  }
  .property {
    color: @php-property;
  }
  .numeric {
    color: @php-numeric;
  }
}
