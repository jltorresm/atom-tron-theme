// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/stylesheets/ui-variables.less
// for a full listing of what's available.
@import "ui-variables";
@import "colors";

atom-text-editor {
  background-color: @bg-color;
  color: @main-rule;
}

.invisible-character { color: transparent; }

.indent-guide {
  box-shadow: inset 1px;
  color: @indent-guide;
  opacity: 0.3;
}

.selection .invisible-character {
  color: @base01;
}

.gutter {
  background-color: @gutter-bg;
}

.gutter .line-number {
  color: @line-number-color;
  opacity: 1;
}

.gutter .line-number.folded,
.gutter .line-number:after,
.fold-marker:after {
  color: @folded-line;
}

.cursor {
  border-color: @cursor;
}

.selection .region {
  background-color: @selection;
}

.line-number.cursor-line-no-selection {
  background-color: lighten(@gutter-bg, 5%);
}

.tab-bar .syntax--tab.active::before {
  &::before {
    background: @line-number-color;
  }

  &[data-type="TextEditor"]::after {
    background: @bg-color;
    border-color: @selection;
  }
}

.bracket-matcher .region {
  background-color: @bracket-matcher;
  opacity: 0.3;
}

.syntax--comment {
  color: @comment;
  font-style: italic;
}

.syntax--entity{
  color: @entities;
}

.syntax--keyword {
  color: @green;
}

.syntax--storage.syntax--type {
  color: @green;
}

.syntax--constant {
  color: @constants;

  &.syntax--numeric,
  &.syntax--boolean {
    color: @number;
  }
}

.syntax--variable {
  color: @variable;
}

.syntax--delimiter, .syntax--brace {
  color: @brace;
}

.syntax--delimiter.syntax--period {
  color: @green;
}

.syntax--invalid.syntax--deprecated {
  text-decoration: underline;
  color: @red;
}

.syntax--invalid.syntax--illegal {
  color: @red;
}

.syntax--string {
  color: @string;

  .syntax--constant.syntax--character.syntax--escape {
    color: @red;
  }

  &.syntax--regexp {
    color: @cyan;

    .syntax--source.syntax--ruby.syntax--embedded,
    .syntax--string.syntax--regexp.syntax--arbitrary-repitition {
      color: @red;
    }
  }
}

.wrap-guide {
  background-color: transparent;
  border-left: dotted 1px @indent-guide;
  opacity: 0.5;
}

//JSON
.syntax--source.syntax--json {
  .syntax--leading-whitespace+.syntax--string, .syntax--hard-tab+.syntax--string {
      color: @comment;
      .syntax--punctuation {
        color: @comment;
      }
  }
  .syntax--key-value, .syntax--pair{ color: @green; }
  .syntax--expected-dictionary-separator{ color: spin(darken(@string,20%),10) }
  .syntax--constant { color: @entities; }
}

//PHP
.syntax--source.syntax--php {
  .syntax--keyword {
    color: @php-keyword;
    &.syntax--operator {
      color: @php-operator;
    }
  }
  .syntax--entity:not(.inherited-class) {
    color: @php-entity
  }
  .syntax--type {
    color: @php-class-functions;
  }
  .syntax--punctuation:not(.variable), .syntax--modifier {
    color: @php-punctuation-modifier;
  }
  .syntax--punctuation.syntax--string{
    color: @string;
  }
  .syntax--comment, .syntax--comment.syntax--punctuation {
    color: @php-comment;
  }
  .syntax--phpdoc.syntax--keyword {
    color: saturate(lighten(@php-comment, 10%), 10%);
    font-style: normal;
  }
  .syntax--name.syntax--function{
    color: @php-function;
  }
  .syntax--function-call {
    color: @php-function-call;
  }
  .syntax--constant {
    color: @php-constant;
  }
  .syntax--property {
    color: @php-property;
  }
  .syntax--numeric {
    color: @php-numeric;
  }
}
